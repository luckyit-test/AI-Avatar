#!/usr/bin/expect -f

set timeout 600
set SERVER_HOST "94.198.221.161"
set SERVER_USER "root"
set SERVER_PASS "oJ@MQ+vvmo,G2G"
set APP_DIR "/opt/newava"
set GIT_REPO "https://github.com/luckyit-test/AI-Avatar.git"

puts "\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ AI-Avatar –Ω–∞ ${SERVER_HOST}...\n"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
puts "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "docker --version 2>/dev/null || echo 'NOT_INSTALLED'"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "command -v docker >/dev/null 2>&1 || (curl -fsSL https://get.docker.com -o get-docker.sh && sh get-docker.sh && rm get-docker.sh)"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
puts "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "docker-compose --version 2>/dev/null || docker compose version 2>/dev/null || echo 'NOT_INSTALLED'"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
puts "üìÅ –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "if \[ -d ${APP_DIR}/.git \]; then cd ${APP_DIR} && git pull origin main; else mkdir -p ${APP_DIR} && cd ${APP_DIR} && git clone ${GIT_REPO} .; fi"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
puts "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
set deploy_dir "${APP_DIR}/deploy/certbot/www"
set conf_dir "${APP_DIR}/deploy/certbot/conf"
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "mkdir -p $deploy_dir $conf_dir"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

puts "\n‚úÖ –ë–∞–∑–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
puts "üìù –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ:"
puts "   1. –°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª —Å GEMINI_API_KEY"
puts "   2. –ó–∞–ø—É—Å—Ç–∏—Ç—å docker-compose build && docker-compose up -d"
puts "\n–í—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —à–∞–≥–∏? (y/n): "
expect_user -re "(.*)\n"
set answer $expect_out(1,string)

if {[string tolower $answer] == "y"} {
    puts "\nüîë –í–≤–µ–¥–∏—Ç–µ GEMINI_API_KEY: "
    expect_user -re "(.*)\n"
    set GEMINI_API_KEY $expect_out(1,string)
    
    puts "‚öôÔ∏è  –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    set env_file "${APP_DIR}/.env"
    spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "echo 'GEMINI_API_KEY=$GEMINI_API_KEY' > $env_file"
    expect {
        "password:" { send "${SERVER_PASS}\r"; exp_continue }
        "Password:" { send "${SERVER_PASS}\r"; exp_continue }
        eof { }
    }
    catch wait
    
    puts "üê≥ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    set app_dir "${APP_DIR}"
    spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "cd $app_dir && docker-compose down || true"
    expect {
        "password:" { send "${SERVER_PASS}\r"; exp_continue }
        "Password:" { send "${SERVER_PASS}\r"; exp_continue }
        eof { }
    }
    catch wait
    
    puts "üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)..."
    spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "cd $app_dir && docker-compose build --no-cache"
    expect {
        "password:" { send "${SERVER_PASS}\r"; exp_continue }
        "Password:" { send "${SERVER_PASS}\r"; exp_continue }
        eof { }
    }
    catch wait
    
    puts "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "cd $app_dir && docker-compose up -d"
    expect {
        "password:" { send "${SERVER_PASS}\r"; exp_continue }
        "Password:" { send "${SERVER_PASS}\r"; exp_continue }
        eof { }
    }
    catch wait
    
    puts "\n‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    puts "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ: http://${SERVER_HOST}"
    
    puts "\nüìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "cd $app_dir && docker-compose ps"
    expect {
        "password:" { send "${SERVER_PASS}\r"; exp_continue }
        "Password:" { send "${SERVER_PASS}\r"; exp_continue }
        eof { }
    }
    catch wait
}

puts "\n‚úÖ –ì–æ—Ç–æ–≤–æ!"

