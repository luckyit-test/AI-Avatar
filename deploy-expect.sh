#!/usr/bin/expect -f

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ expect (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç sshpass)
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy-expect.sh [GEMINI_API_KEY] [DOMAIN]

set timeout 300
set GEMINI_API_KEY [lindex $argv 0]
set DOMAIN [lindex $argv 1]
set SERVER_HOST "94.198.221.161"
set SERVER_USER "root"
set SERVER_PASS "oJ@MQ+vvmo,G2G"
set APP_DIR "/opt/newava"
set GIT_REPO "https://github.com/luckyit-test/AI-Avatar.git"

if {$GEMINI_API_KEY == ""} {
    puts "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω GEMINI_API_KEY"
    puts "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $argv0 <GEMINI_API_KEY> [DOMAIN]"
    exit 1
}

puts "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä ${SERVER_HOST}...\n"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ SSH
proc ssh_exec {command} {
    global SERVER_HOST SERVER_USER SERVER_PASS
    spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} $command
    expect {
        "password:" {
            send "${SERVER_PASS}\r"
            exp_continue
        }
        "Password:" {
            send "${SERVER_PASS}\r"
            exp_continue
        }
        "$ " { }
        "# " { }
        eof { }
    }
    expect eof
    catch wait result
    return [lindex $result 3]
}

puts "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "docker --version && docker-compose --version && git --version"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
puts "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "command -v docker || curl -fsSL https://get.docker.com -o get-docker.sh && sh get-docker.sh && rm get-docker.sh"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

puts "üìÅ –ö–ª–æ–Ω–∏—Ä—É–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "if [ -d ${APP_DIR}/.git ]; then cd ${APP_DIR} && git pull origin main; else mkdir -p ${APP_DIR} && cd ${APP_DIR} && git clone ${GIT_REPO} .; fi"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

puts "üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "mkdir -p ${APP_DIR}/deploy/certbot/www && mkdir -p ${APP_DIR}/deploy/certbot/conf"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

puts "‚öôÔ∏è  –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "echo 'GEMINI_API_KEY=${GEMINI_API_KEY}' > ${APP_DIR}/.env"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

puts "üê≥ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "cd ${APP_DIR} && docker-compose down || true"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

puts "üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "cd ${APP_DIR} && docker-compose build --no-cache"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

puts "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "cd ${APP_DIR} && docker-compose up -d"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

puts "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 5

if {$DOMAIN != ""} {
    puts "üîí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –¥–æ–º–µ–Ω–∞ ${DOMAIN}..."
    spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "cd ${APP_DIR} && docker-compose run --rm certbot certonly --webroot -w /var/www/certbot --email admin@${DOMAIN} -d ${DOMAIN} --agree-tos --non-interactive || echo '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'"
    expect {
        "password:" { send "${SERVER_PASS}\r"; exp_continue }
        "Password:" { send "${SERVER_PASS}\r"; exp_continue }
        eof { }
    }
    catch wait
    
    spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "sed -i 's/server_name _;/server_name ${DOMAIN};/g' ${APP_DIR}/deploy/nginx/conf.d/app.conf && cd ${APP_DIR} && docker-compose restart nginx"
    expect {
        "password:" { send "${SERVER_PASS}\r"; exp_continue }
        "Password:" { send "${SERVER_PASS}\r"; exp_continue }
        eof { }
    }
    catch wait
}

puts "\n‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
puts "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://${SERVER_HOST}"
if {$DOMAIN != ""} {
    puts "üåê –ò–ª–∏ –ø–æ –¥–æ–º–µ–Ω—É: https://${DOMAIN}"
}

puts "\nüìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
spawn ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} "cd ${APP_DIR} && docker-compose ps"
expect {
    "password:" { send "${SERVER_PASS}\r"; exp_continue }
    "Password:" { send "${SERVER_PASS}\r"; exp_continue }
    eof { }
}
catch wait

puts "\n‚úÖ –ì–æ—Ç–æ–≤–æ!"

