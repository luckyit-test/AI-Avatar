version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    image: newava-backend:latest
    container_name: newava_backend
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PORT=3001
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
    restart: unless-stopped
    networks:
      - newava_network

  app:
    build: .
    image: newava:latest
    container_name: newava_app
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    restart: unless-stopped
    networks:
      - newava_network

  nginx:
    image: nginx:1.27-alpine
    container_name: newava_nginx
    depends_on:
      - app
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./deploy/certbot/www:/var/www/certbot
      - ./deploy/certbot/conf:/etc/letsencrypt
    restart: unless-stopped
    networks:
      - newava_network

  certbot:
    image: certbot/certbot:latest
    container_name: newava_certbot
    volumes:
      - ./deploy/certbot/conf:/etc/letsencrypt
      - ./deploy/certbot/www:/var/www/certbot
    entrypoint: /bin/sh -c
    command: "trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew --webroot -w /var/www/certbot --quiet --deploy-hook 'nginx -s reload'; done"

networks:
  newava_network:
    driver: bridge
